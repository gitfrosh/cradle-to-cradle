{"version":3,"sources":["Step0.js","Step1.js","Step2.js","Step4.js","Step3.js","App.js","serviceWorker.js","index.js"],"names":["Step1","react_default","a","createElement","id","className","Step2","Step4","Step3","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","count","setCount","disabled","onClick","prevCount","Step0","src_Step1","src_Step2","src_Step3","src_Step4","getStep","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0ad9e0c5.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Step1() {\n  return (\n    <section id=\"content\" className=\"section\">\n      <span className=\"highlight\">Waste</span> is a human invention. No other\n      species in the world is acting as little intelligently as mankind and\n      produces so much waste. Waste management was the answer to a{\" \"}\n      <span className=\"highlight\"> catastrophic product design</span>, which\n      privatized profit and socialized risk.\n    </section>\n  );\n}\n\nexport default Step1;\n","import React from \"react\";\n\nfunction Step1() {\n  return (\n    <section id=\"content\" className=\"section\">\n      <span className=\"highlight\">Cradle-to-Cradle</span> is a design concept, which\n      takes <span className=\"highlight\">nature</span> as a role model. C2C describes\n      the safe and potentially endless circulation of materials and nutritions.\n      <br /><br /> The central term is{\" \"}\n      <span className=\"highlight\">eco-effectiveness</span>.\n    </section>\n  );\n}\n\nexport default Step1;\n","import React from \"react\";\n\nfunction Step2() {\n  return (\n    <section id=\"content\" className=\"section\">\n      Examples for <span className=\"highlight\">eco-effective activities</span>:\n      <ul>\n        <li> upcycling </li>\n        <li>biodegradable materials </li>\n\n        <li>holistic recycling economy</li>\n\n        <li>renewable energies</li>\n      </ul>\n    </section>\n  );\n}\n\nexport default Step2;\n","import React from \"react\";\n\nfunction Step4() {\n  return (\n    <section id=\"content\" className=\"section\">\n      Is the C2C principle applicable to the{\" \"}\n      <span className=\"highlight\">digital world</span>? Yes, because digital\n      resources (digital knowledge and cultural artifacts) are maintained\n      sustainably, if their use for the human society is fulfilled also for{\" \"}\n      <span className=\"highlight\">future generations</span>.\n    </section>\n  );\n}\n\nexport default Step4;\n","import React from \"react\";\n\nfunction Step3() {\n  return (\n    <section id=\"content\" className=\"section\">\n      The C2C principle can be applied not only to specific products but to{\" \"}\n      <span className=\"highlight\">architecture and urban construction</span> as well{\" \"}\n      („becoming native to a place“). That means, while processing materials\n      carefully, you should consider how to enrich the environment as a side\n      effect.\n    </section>\n  );\n}\n\nexport default Step3;\n","import React from \"react\";\nimport \"./App.css\";\nimport Step0 from \"./Step0\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport Step4 from \"./Step4\";\nimport Step3 from \"./Step3\";\n\nfunction App() {\n  function getStep() {\n    switch (count) {\n      case 0:\n        return <Step0 />;\n\n      case 1:\n        return <Step1 />;\n      case 2:\n        return <Step2 />;\n      case 3:\n        return <Step3 />;\n      case 4:\n        return <Step4 />;\n      default:\n      // code block\n    }\n  }\n  const [count, setCount] = React.useState(0);\n\n  return (\n    <div>\n      <section id=\"nav\" className=\"section\">\n        <div id=\"nav-buttons\">\n          <button\n            disabled={count !== 0 ? false : true}\n            onClick={() => setCount(prevCount => prevCount - 1)}\n            className=\"ui green massive circular ui icon button\"\n          >\n            <i className=\"icon angle left\" />\n          </button>{\" \"}\n          <button\n            disabled={count !== 4 ? false : true}\n            onClick={() => setCount(prevCount => prevCount + 1)}\n            className=\"ui green massive circular ui icon button\"\n          >\n            <i className=\"icon angle right\" />\n          </button>\n        </div>{\" \"}\n      </section>\n      {getStep(count)}\n\n      <section id=\"footer\" className=\"section\">\n        <em>What is the Cradle-to-Cradle philosophy?</em> Made by{\" \"}\n        <a href=\"https://rike.dev\">rike.dev</a>.{\" \"}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}